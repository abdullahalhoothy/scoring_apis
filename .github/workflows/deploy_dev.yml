name: Deploy Dev

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual build and deploy'


jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']
    steps:
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      env:
        DEV_SCORING_API_POSTGRES_DB: ${{ secrets.DEV_SCORING_API_POSTGRES_DB }}
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      with:
        host: '46.62.227.32'
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        envs: DEV_SCORING_API_POSTGRES_DB, GITHUB_PAT
        script: |
          set -x  # Enable debug mode
          set -e  # Exit on error
          
          echo "Starting deployment process..."

          cd ..
          cd ..
          cd ..
          cd ..
          cd ..
          if [ -d "scoring_apis" ]; then
            cd scoring_apis
            docker compose down
            echo "Docker compose down completed."
            
            cd ..
            rm -rf scoring_apis
            echo "Removed existing scoring_apis directory."
          fi
          
          # Clone main repository
          git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/abdullahalhoothy/scoring_apis.git
          cd scoring_apis
          
          # Create secrets directory if it doesn't exist
          mkdir -p secrets
          echo "Secret directories created."
          
          # Create secret files
          echo '${{ secrets.DEV_SCORING_API_POSTGRES_DB }}' > secrets/postgres_db.json
          echo "Secret files created."
          
          # Replace values in files
          sed -i 's|host="localhost"|host="0.0.0.0"|g' run_apps.py
          echo "Configuration files updated."
          
          # Build and run Docker containers
          docker compose build
          echo "Docker compose build completed."
          
          docker compose up
          echo "Docker compose up completed."

          echo "Deployment process finished."
